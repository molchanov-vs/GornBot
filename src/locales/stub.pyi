from decimal import Decimal
from typing import Literal

from fluent_compiler.types import FluentType
from typing_extensions import TypeAlias

PossibleValue: TypeAlias = str | int | float | Decimal | bool | FluentType

class TranslatorRunner:
    def get(self, path: str, **kwargs: PossibleValue) -> str: ...
    service: Service
    feedback: Feedback

class Service:
    @staticmethod
    def lang() -> Literal["""ru"""]: ...
    @staticmethod
    def back_btn() -> Literal["""‚óÄÔ∏è –ù–∞–∑–∞–¥"""]: ...
    @staticmethod
    def next_btn() -> Literal["""–î–∞–ª–µ–µ ‚ñ∂Ô∏è"""]: ...
    @staticmethod
    def done_btn() -> Literal["""‚úÖ –ì–æ—Ç–æ–≤–æ"""]: ...
    @staticmethod
    def contact_btn() -> Literal["""üí¨ –°–≤—è–∑–∞—Ç—å—Å—è"""]: ...
    @staticmethod
    def to_msg_btn() -> Literal["""üëÄ –ö —Å–æ–æ–±—â–µ–Ω–∏—é"""]: ...
    @staticmethod
    def admin_btn() -> Literal["""üõ†Ô∏è –ê–¥–º–∏–Ω–∫–∞"""]: ...
    @staticmethod
    def support_btn() -> Literal["""üë®üèª‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞"""]: ...

class Feedback:
    @staticmethod
    def discipline(*, username: PossibleValue) -> Literal["""–ü—Ä–∏–≤–µ—Ç, { $username }.

–í—ã–±–µ—Ä–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É:"""]: ...
    @staticmethod
    def task() -> Literal["""–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞.

–í—ã–±–µ—Ä–∏ –∑–∞–¥–∞—á—É"""]: ...
    @staticmethod
    def input() -> Literal["""–û–ø–∏—Å–∞–Ω–∏–µ –ó–∞–¥–∞–Ω–∏—è (–≤–∫–ª—é—á–∞—è –ö—Ä–∏—Ç–µ—Ä–∏–∏)

–°–∏–ª–ª–∞–±—É—Å (–µ—Å–ª–∏ –µ—Å—Ç—å)"""]: ...
    @staticmethod
    def audio() -> Literal["""–í–æ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è:"""]: ...
    @staticmethod
    def output() -> Literal["""–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:"""]: ...
